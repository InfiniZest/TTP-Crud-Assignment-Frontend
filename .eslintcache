[{"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/index.js":"1","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/App.js":"2","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/reportWebVitals.js":"3","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/store.js":"4","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/AllCampuses.js":"5","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/reducers/index.js":"6","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/DisplayCampus.js":"7","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/reducers/actionTypes.js":"8","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/NewCampus.js":"9","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/SingleCampus.js":"10"},{"size":575,"mtime":1611329805338,"results":"11","hashOfConfig":"12"},{"size":851,"mtime":1611332767395,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611329805349,"results":"14","hashOfConfig":"12"},{"size":450,"mtime":1611329805347,"results":"15","hashOfConfig":"12"},{"size":1477,"mtime":1611337371408,"results":"16","hashOfConfig":"12"},{"size":1647,"mtime":1611346560271,"results":"17","hashOfConfig":"12"},{"size":570,"mtime":1611334080352,"results":"18","hashOfConfig":"12"},{"size":158,"mtime":1611332302546,"results":"19","hashOfConfig":"12"},{"size":2135,"mtime":1611348363431,"results":"20","hashOfConfig":"12"},{"size":941,"mtime":1611333146612,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1imuog6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/index.js",[],["47","48"],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/App.js",["49","50"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AllCampuses from \"./components/AllCampuses\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\nimport NewCampus from \"./components/NewCampus\";\nimport DisplayCampus from \"./components/DisplayCampus\";\nimport SingleCampus from \"./components/SingleCampus\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/campuses\">All Campuses</Link>\n        <Switch>\n          <Route exact path=\"/\"></Route>\n          <Route exact path=\"/campuses\" component={AllCampuses}></Route>\n          <Route exact path=\"/campuses/new\" component={NewCampus}></Route>\n          <Route exact path=\"/campuses/:id\" component={SingleCampus}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/reportWebVitals.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/store.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/AllCampuses.js",["51"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCampuses, addNewCampus } from \"../redux/reducers\";\nimport { Link } from \"react-router-dom\";\n\nimport DisplayCampus from \"./DisplayCampus\";\nimport NewCampus from \"./NewCampus\";\n\nclass AllCampuses extends Component {\n  async componentDidMount() {\n    await this.props.getAll();\n    // await this.props.addNewCampus;\n  }\n\n  render() {\n    console.log(this.props);\n    if (this.props.campuses.length > 0)\n      return (\n        <div>\n          <Link to=\"/campuses/new\">\n            <button>Add New Campus</button>\n          </Link>\n\n          {this.props.campuses.map((item, index) => {\n            return (\n              <DisplayCampus\n                key={index}\n                name={item.name}\n                imageUrl={item.imageUrl}\n                id={item.id}\n              />\n            );\n          })}\n        </div>\n      );\n    else\n      return (\n        <div>\n          <Link to=\"/campuses/new\">\n            <button>Add New Campus</button>\n          </Link>\n          <p> No Campuses Found</p>\n        </div>\n      );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    campuses: state.campuses,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAll: () => dispatch(getAllCampuses()),\n    addNew: () => dispatch(addNewCampus()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCampuses);\n\n// export default AllCampuses;\n","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/reducers/index.js",["52"],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/DisplayCampus.js",["53","54"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass DisplayCampus extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const myLink = `/campuses/${this.props.id}`;\n    return (\n      <div>\n        Campus Name: {this.props.name}\n        <br />\n        <img src={this.props.imageUrl} alt=\"campus image\"></img>\n        <br />\n        <button>DELETE</button>\n        <button>EDIT</button>\n        <br />\n        <Link to={myLink}>View Campus</Link>\n      </div>\n    );\n  }\n}\n\nexport default DisplayCampus;\n","/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/redux/reducers/actionTypes.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/NewCampus.js",["55","56"],"/Users/anastasiyachabotska/Desktop/TTP-Crud-Assignment-Frontend/src/components/SingleCampus.js",["57"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSingleCampus } from \"../redux/reducers\";\n\nclass SingleCampus extends Component {\n  async componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.getSingleCampus(id);\n  }\n  render() {\n    return (\n      <div>\n        Campus Name: {this.props.singleCampus.name}\n        <br />\n        Address: {this.props.singleCampus.address}\n        <br />\n        Description: {this.props.singleCampus.description}\n        <br />\n        <img src={this.props.singleCampus.imgUrl} alt=\"campus image\"></img>\n        <br />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    singleCampus: state.singleCampus,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSingleCampus: (id) => dispatch(getSingleCampus(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCampus);\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":21},{"ruleId":"62","severity":1,"message":"67","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":17},{"ruleId":"62","severity":1,"message":"68","line":55,"column":13,"nodeType":"64","messageId":"65","endLine":55,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":5,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":4},{"ruleId":"73","severity":1,"message":"74","line":15,"column":9,"nodeType":"75","endLine":15,"endColumn":59},{"ruleId":"62","severity":1,"message":"76","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"77","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":19,"column":9,"nodeType":"75","endLine":19,"endColumn":70},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DisplayCampus' is defined but never used.","'NewCampus' is defined but never used.","'response' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'axios' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]